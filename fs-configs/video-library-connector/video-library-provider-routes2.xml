<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:camel="http://camel.apache.org/schema/spring" 
       xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
          http://camel.apache.org/schema/spring
          http://camel.apache.org/schema/spring/camel-spring.xsd">

    <camel:sslContextParameters id="serverSslContext" certAlias="1.0.1">
        <camel:keyManagers keyPassword="password">
            <camel:keyStore resource="etc/provider-keystore.p12" password="password"/>
        </camel:keyManagers>
        <camel:trustManagers>
            <camel:keyStore resource="etc/truststore.p12" password="password"/>
        </camel:trustManagers>
    </camel:sslContextParameters>


    <bean id="ArtifactRequestProcessor" class="de.fhg.aisec.ids.camel.idscp2.processors.ArtifactRequestProcessor" />
    <bean id="ContractRequestProcessor" class="de.fhg.aisec.ids.camel.idscp2.processors.ContractRequestProcessor"/>
    <bean id="ContractAgreementReceiverProcessor" class="de.fhg.aisec.ids.camel.idscp2.processors.ContractAgreementReceiverProcessor"/>
    <bean id="TypeExtractionProcessor" class="de.fhg.aisec.ids.camel.idscp2.processors.IdsMessageTypeExtractionProcessor" />

    <!-- The following defines a single bean called ResourceUpdateCreationProcessor implemented by the POJO de.fhg.aisec.ids.camel.idscp2.processors.ResourceUpdateCreationProcessor -->
    <bean id="ResourceUpdateCreationProcessor" class="de.fhg.aisec.ids.camel.idscp2.processors.ResourceUpdateCreationProcessor" />

    <!-- The following defines a single bean called TypeExtractionProcessor implemented by the POJO de.fhg.aisec.ids.camel.idscp2.processors.IdsMessageTypeExtractionProcessor -->
    <!-- <bean id="TypeExtractionProcessor" -->
          <!-- class="de.fhg.aisec.ids.camel.idscp2.processors.IdsMessageTypeExtractionProcessor"/> -->

    <!-- The following defines a single bean called ContractOfferCreationProcessor implemented by the POJO de.fhg.aisec.ids.camel.idscp2.processors.ContractOfferCreationProcessor -->
    <!-- <bean id="ContractOfferCreationProcessor" -->
          <!-- class="de.fhg.aisec.ids.dgprocessors.ContractOfferCreationProcessor"/> -->

    <!-- The following defines a single bean called ContractAgreementReceiverProcessor implemented by the POJO de.fhg.aisec.ids.camel.idscp2.processors.ContractAgreementReceiverProcessor -->
    <!-- <bean id="ContractAgreementReceiverProcessor" -->
          <!-- class="de.fhg.aisec.ids.camel.idscp2.processors.ContractAgreementReceiverProcessor"/> -->

    <!-- The following defines a single bean called ResourceUpdateCreationProcessor implemented by the POJO de.fhg.aisec.ids.camel.idscp2.processors.ResourceUpdateCreationProcessor -->
    <!-- <bean id="ResourceUpdateCreationProcessor" -->
          <!-- class="de.fhg.aisec.ids.camel.idscp2.processors.ResourceUpdateCreationProcessor"/> -->

    <camelContext xmlns="http://camel.apache.org/schema/spring">
        <!-- <dataFormats>
            <json id="jack" library="Jackson" prettyPrint="true"/>
        </dataFormats> -->
        <route id="server">
            <from uri="idscp2server://0.0.0.0:29293?sslContextParameters=#serverSslContext&amp;useIdsMessages=true&amp;tlsClientHostnameVerification=false"/>
            <process ref="TypeExtractionProcessor"/>
            <choice>
                <when>
                    <simple>${exchangeProperty.ids-type} == 'ContractRequestMessage'</simple>
                    <log message="### Handle ContractRequestMessage ###"/>
                    <setProperty name="containerUri">
                        <constant>
                            https://hub.docker.com/layers/164609369/farmstack/gsheets/latest/images/sha256-242f4b8b514a8823b8e77be9e980284c4a049e850dc43d6095f7dfd5d219c958#3001
                        </constant>
                    </setProperty>
                    <process ref="ContractRequestProcessor"/>
                </when>
                <when>
                    <simple>${exchangeProperty.ids-type} == 'ContractAgreementMessage'</simple>
                    <log message="### Handle ContractAgreementMessage ###"/>
                    <!-- Only processing of incoming request must be performed, no reply -->
                    <process ref="ContractAgreementReceiverProcessor"/>
                    <removeHeader headerName="idscp2-header" />
                    <setBody><simple>${null}</simple></setBody>
                </when>
                <when>
                    <simple>${exchangeProperty.ids-type} == 'ArtifactRequestMessage'</simple>
                    <log message="### Handle ArtifactRequestMessage ###"/>
                    <process ref="ArtifactRequestProcessor" />
                    <to uri="direct:sendData2"/>
                </when>
                <otherwise>
                    <log loggingLevel="ERROR" message="### Server received unexpected message (otherwise branch):\n${body}\n### Header: ###\n${headers[idscp2-header]}"/>
                    <removeHeader headerName="idscp2-header" />
                    <setBody><simple>${null}</simple></setBody>
                </otherwise>
            </choice>
        </route>

        <route id="sendProviderData2">
            <from uri="direct:sendData2"/>
            <!-- <from uri="timer://tenSecondsTimer?fixedRate=true&amp;period=10000&amp;delay=20000"/> -->
            <!-- ensure that contract agreement is made before sending -->
            <setHeader name="CamelHttpMethod">
                <constant>GET</constant>
            </setHeader>
            <to uri="http://mysql-connector2:3001/data"/>
            <setProperty name="artifactUri">
                <constant>https://farmstack.digitalgreen.org/videoLibraryGsheet</constant>
            </setProperty>
          <process ref="ResourceUpdateCreationProcessor" />
            <to uri="idscp2server://0.0.0.0:29293?sslContextParameters=#serverSslContext&amp;useIdsMessages=true&amp;tlsClientHostnameVerification=false"/>
        </route>
    </camelContext>

</beans>
